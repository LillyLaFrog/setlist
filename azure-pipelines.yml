trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  artifactDir: "$(System.DefaultWorkingDirectory)/bin"
  workingDir: "$(System.DefaultWorkingDirectory)/working/"
  expo_token: FOkQebgWRTBGUaVl1H-LwzeRshjTfmHZIpdCzqgj
  ticketmaster_api_key: egpI9dkBAoSk2psLmyOqc8Oyzr57kqMG
  google_maps_api_key: AIzaSyAdi1SjtinJH1pqks6TGw_GAAIfMLrJOVE
  discogs_api_key: bnDkevSKZKNwedhShIKh
  discogs_api_secret: TvDAxpyxpouDOkZFvseKGdnFEXZqTHtl
  firebase_api_key: AIzaSyC1LMoAbgA9hD2ZKxaGeynfpQQAEsZshDs

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- script: |
    echo "Creating working directory and injecting API keys..."&&
    mkdir "$(workingDir)"&&
    ls .&&
    rsync -var --exclude='working' ./ ./working &&
    cd $(workingDir)&&
    ls .&&

    echo $'export const TICKETMASTER_API_KEY="$(ticketmaster_api_key)";
    export const GOOGLE_MAPS_API_KEY="$(google_maps_api_key)";
    export const DISCOGS_API_KEY="$(discogs_api_key)";
    export const DISCOGS_API_SECRET="$(discogs_api_secret)";
    export const FIREBASE_API_KEY="$(firebase_api_key)";' > ./constants/ApiKeys.js
  
  displayName: Prepare working directory

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    workingDir: $(workingDir)

- script:
    cd $(workingDir) &&
    npm install -g eas-cli
  displayName: Install EAS CLI

- script: 
    echo "Running EAS build in clean working directory..."&&

    export EXPO_TOKEN='$(expo_token)'&&
    export EAS_LOCAL_BUILD_ARTIFACTS_DIR='$(artifactDir)'&&
    cd "$(workingDir)"&&
    npx eas-cli build --platform android --non-interactive --no-wait --local
  displayName: Build with EAS

- task: PublishBuildArtifacts@1
  inputs:
    TargetPath: $(artifactDir)
    ArtifactName: build files
  displayName: Publish Build Artifacts
