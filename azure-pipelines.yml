# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  artifactDir: "$(System.DefaultWorkingDirectory)/bin"
  expo_token: FOkQebgWRTBGUaVl1H-LwzeRshjTfmHZIpdCzqgj
  ticketmaster_api_key: egpI9dkBAoSk2psLmyOqc8Oyzr57kqMG
  google_maps_api_key: AIzaSyAdi1SjtinJH1pqks6TGw_GAAIfMLrJOVE
  discogs_api_key: bnDkevSKZKNwedhShIKh
  discogs_api_secret: TvDAxpyxpouDOkZFvseKGdnFEXZqTHtl
  firebase_api_key: AIzaSyC1LMoAbgA9hD2ZKxaGeynfpQQAEsZshDs

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- task: Npm@1
  displayName: 'run npm install'

- script:
    touch ./constants/ApiKeys.js &&
    echo $'export const TICKETMASTER_API_KEY="$(ticketmaster_api_key)"\n
           export const GOOGLE_MAPS_API_KEY="$(google_maps_api_key)"\n
           export const DISCOGS_API_KEY="$(discogs_api_key)"\n
           export const DISCOGS_API_SECRET="$(discogs_api_secret)"\n
           export const FIREBASE_API_KEY="$(firebase_api_key)"' > ./constants/ApiKeys.js
  displayName: Create ApiKeys.js file

- script: 
    npm install -g eas-cli
  displayName: install Expo App Services

- script:
    mkdir $(artifactDir) &&
    touch $(artifactDir)/expolink.txt &&
    export EXPO_TOKEN='$(expo_token)' && npx eas-cli build --platform android --non-interactive --no-wait > $(artifactDir)/expolink.txt
  displayName: build with eas

- task: PublishBuildArtifacts@1
  inputs:
    TargetPath: $(artifactDir)
    ArtifactName: expolink