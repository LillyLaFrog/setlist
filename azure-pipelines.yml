
trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  artifactDir: "$(System.DefaultWorkingDirectory)/bin"
  workingDir: "$(System.DefaultWorkingDirectory)/working"
  expo_token: FOkQebgWRTBGUaVl1H-LwzeRshjTfmHZIpdCzqgj
  ticketmaster_api_key: egpI9dkBAoSk2psLmyOqc8Oyzr57kqMG
  google_maps_api_key: AIzaSyAdi1SjtinJH1pqks6TGw_GAAIfMLrJOVE
  discogs_api_key: bnDkevSKZKNwedhShIKh
  discogs_api_secret: TvDAxpyxpouDOkZFvseKGdnFEXZqTHtl
  firebase_api_key: AIzaSyC1LMoAbgA9hD2ZKxaGeynfpQQAEsZshDs

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- task: Npm@1
  displayName: 'run npm install'

- script:
    ls &&
    touch ./constants/ApiKeys.js &&
    echo $'export const TICKETMASTER_API_KEY="$(ticketmaster_api_key)"\n
           export const GOOGLE_MAPS_API_KEY="$(google_maps_api_key)"\n
           export const DISCOGS_API_KEY="$(discogs_api_key)"\n
           export const DISCOGS_API_SECRET="$(discogs_api_secret)"\n
           export const FIREBASE_API_KEY="$(firebase_api_key)"' > ./constants/ApiKeys.js &&
    cp -r . '$(workingDir)'
  displayName: Create ApiKeys.js file

- script: 
    npm install -g eas-cli
  displayName: install Expo App Services

- script:
    mkdir $(artifactDir) &&
    touch $(artifactDir)/expolink.txt &&
    export EXPO_TOKEN='$(expo_token)' &&
    mkdir $(workingDir) &&
    export EAS_LOCAL_BUILD_WORKINGDIR='$(artifactDir)' &&
    export EAS_LOCAL_BUILD_WORKINGDIR='$(workingDir)' &&
    npx eas-cli build --platform android --non-interactive --no-wait --local
  displayName: build with eas

- task: PublishBuildArtifacts@1
  inputs:
    TargetPath: $(artifactDir)/*
    ArtifactName: build files